print("this is not a correct choice")
return()
}
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R', echo=TRUE)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R', echo=TRUE)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R', echo=TRUE)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R', echo=FALSE)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R', echo=FALSE)
x <- readline(prompt="Which file do you want to read?")
x
x <- 2
x<length(dir())+1
x <- 15
x<length(dir())+1
x <- 14
x<length(dir())+1
x <- -1
x<length(dir())+1
is.numeric(x) && x<length(dir())+1
x <- a
x <- "a"
is.numeric(x) && x<length(dir())+1
x <- "14"
is.numeric(x) && x<length(dir())+1
x <- 14
is.numeric(x) && x<length(dir())+1
as.numeric("au")
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R', echo=TRUE)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
NA<0
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
x
if (is.na(x)) return(errmsg1)
?stop
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
setwd("C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards")
dirname(sys.frame(1)$ofile)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
flines <- readLines(con="export_exploratory data analysis  week 1.csv")
flines
fpat <- '/^"'
regexec(pattern=fpat,text=flines)
tryme <- head(flines)
tryme
tryme[1]
regexec(pattern=fpat,text=tryme)
fpat
fpat <- '^"'
fpat
regexec(pattern=fpat,text=tryme)
grep(pattern=fpat,x=flines)
flines[grep(pattern=fpat,x=flines)]
fpat_end <- '$"'
grep(pattern=fpat_end,x=flines)
fpat_end
fpat_end <- '*$"'
grep(pattern=fpat_end,x=flines)
flines
fpat_ent
fpat_end
fpat_end <- '$"'
grep(pattern=fpat_end,x=flines)
flines
fpat_end
fpat_end <- '"$'
grep(pattern=fpat_end,x=flines)
startelements <- grep(pattern=fpat_start,x=flines)
endelements <- grep(pattern=fpat_end,x=flines)
fpat_start <- '^"' # starts with a quotation mark
fpat_end <- '"$' # ends with a quotation mark
# Get starting and ending elements
startelements <- grep(pattern=fpat_start,x=flines)
endelements <- grep(pattern=fpat_end,x=flines)
startelements
endelements
if (length(startelements)!=length(endelements)) stop(errmsg2)
?seq
seq(from=1,to=3,by=1)
elements <- seq(from=startelements,to=endelements,by=1)
?for
?rep
startelements <- grep(pattern=fpat_start,x=flines)
endelements <- grep(pattern=fpat_end,x=flines)
if (length(startelements)!=length(endelements)) stop(errmsg2) # Just checking whether we identified an equal number of starting and ending elements
elementslength <- length(startelements)
elements <- as.vector(rep(x="",times=elementslength))
for(i in 1:elementslength) {
elements[i] <- seq(from=startelements[i],to=endelements[i],by=1)
}
elements
elements <- as.list(rep(x="",times=elementslength))
for(i in 1:elementslength) {
elements[i] <- seq(from=startelements[i],to=endelements[i],by=1)
}
elements
seq(from=startelements[1],to=endelements[1],by=1)
class(seq(from=startelements[1],to=endelements[1],by=1))
seq(from=startelements[2],to=endelements[2],by=1)
tryme <- seq(from=startelements[2],to=endelements[2],by=1)
flines[tryme]
paste(flines[tryme],sep="")
paste(flines[tryme],collapse="")
flines[(]seq(from=startelements[2],to=endelements[2],by=1)]
flines[seq(from=startelements[2],to=endelements[2],by=1)]
flines[seq(from=startelements[4],to=endelements[4],by=1)]
flines[seq(from=startelements[1],to=endelements[1],by=1)]
elements <- list()
for(i in 1:elementslength) {
elements[i] <- seq(from=startelements[i],to=endelements[i],by=1)
}
elements
elements[[1]]
elements[[2]]
elements[[22]]
elements[22]
as.list(seq(from=startelements[2],to=endelements[2],by=1))
startelements <- grep(pattern=fpat_start,x=flines)
endelements <- grep(pattern=fpat_end,x=flines)
if (length(startelements)!=length(endelements)) stop(errmsg2) # Just checking whether we identified an equal number of starting and ending elements
elementslength <- length(startelements)
elements <- list()
for(i in 1:elementslength) {
elements[i] <- as.list(seq(from=startelements[i],to=endelements[i],by=1))
}
elements[1]
elements[2]
elements[3]
as.list(seq(from=startelements[2],to=endelements[2],by=1))
startelements <- grep(pattern=fpat_start,x=flines)
endelements <- grep(pattern=fpat_end,x=flines)
if (length(startelements)!=length(endelements)) stop(errmsg2) # Just checking whether we identified an equal number of starting and ending elements
elementslength <- length(startelements)
elements <- list()
for(i in 1:elementslength) {
elements[[i]] <- seq(from=startelements[i],to=endelements[i],by=1)
}
elements
elements[]19
elements[19]
flines(seq(from=startelements[7],to=endelements[7],by=1))
flines[seq(from=startelements[7],to=endelements[7],by=1)]
elements[,1]
elements[1]
elements[1][]
elements[][1]
elements[][]
elements[[]]
elements[[1]]
elements[[1]][1]
elements[1][1]
elements[[1]][1]
elements[[3]][1]
dim(elements)
length(elements)
elements
?sub
?stringr::
?stringr
?str_split
elements[[1]][]1
elements[[1]][1]
elements[[1]]
flines(elements[[1]][1])
flines[elements[[1]][1]]
str_split(string=flines[elements[[1]][1]],pattern='","')
library(stringr)
library(c("stringr","swirl"))
list.of.packages <- c("stringr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
list.of.packages
length(list.of.packages)
for (i in 1:length(list.of.packages)) library(list.of.packages[i])
list.of.packages[1]
class(list.of.packages[1])
library("stringr")
library(list.of.packages[1])
library(monkey)
monkey <- list.of.packages[1]
library(monkey)
library(list.of.packages[1],character.only = TRUE)
library(c("stringr","swirl"),character.only = TRUE)
str_split(string=flines[elements[[1]][1]],pattern='","')
str_split(string=flines[elements[[1]][1]],pattern='","')[1]
str_split(string=flines[elements[[1]][1]],pattern='","')[[1]]
str_split(string=flines[elements[[1]][1]],pattern='","')[[1]][1]
str_split(string=flines[elements[[1]][1]],pattern='","')[[1]][2]
str_split(string=flines[elements[[1]][1]],pattern='","')[[1]][2]
str_split(string=flines[elements[[1]][1]],pattern='","')
elements[[1]][1]]
elements[[1]][1]
elements[[2]][1]
elements[[2]]
leength(elements[[2]])
length(elements[[2]])
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
c("a","b","c","d")
aaa <- c("a","b","c","d")
aaa
bbb <- "boko"
cbind(aaa,bbb)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
elements[[1]]
elements[[2]]
length(elements[[1]])
elements[[2]][2]
elementslength
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
fname
fcname
?sub()
sub(pattern="$//.csv",replacement="//.Rda",x=fcname)
sub(pattern=".csv",replacement="//.Rda",x=fcname)
sub(pattern=".csv",replacement=".Rda",x=fcname)
?save
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
?dir
dir(pattern=".csv")
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
?print
print("Lucien")
print("Lucien",quote=FALSE)
print("Lucien",quote=FALSE,digits=0)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
?cat
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/flashcardreader.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
fcards
load(fcname)
fcards
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
f_nb_fcards <- unique(fcards$number)
f_nb_fcards
f_nb_fcards <- length(unique(fcards$number))
f_nb_fcards
?case
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
?stop
stop("boy")
stop("boy",call.=FALSE)
stop("boy",domain=FALSE)
stop("boy",domain=NULL)
stop("boy",domain="")
?exit
??exit
?quit
f_order <- seq(from=1, to=fcards_nb, by=1)
set.seed(001)
f_order <- sample(f_order)
f_order
?while
?while()
f_order[1]
?subset()
subset(f_order,f_order!=6)
subset(f_order,f_order!=9)
fcards
subset(x=fcards,fcards$number=6&&fcards$type="question")
subset(x=fcards,fcards$number==6&&fcards$type=="question")
subset(x=fcards,fcards$number==6 && fcards$type=="question")
subset(x=fcards,fcards$number==22 && fcards$type=="question")
subset(x=fcards,fcards$type=="question")
subset(x=fcards,fcards$number==22)
subset(x=fcards,fcards$number==22&&fcards$type=="question")
subset(x=fcards,fcards$number==22 && fcards$type==question)
fcards$type
as.character(fcards$type()
)
as.character(fcards$type
as.character(fcards$type)
fcards$type <- as.character(fcards$type()
fcards$type <- as.character(fcards$type)
subset(x=fcards,fcards$number==22 && fcards$type==question)
subset(x=fcards,fcards$number==22 && fcards$type=="question")
fcards$type
fcards
subset(x=fcards,fcards$type=="question")
subset(x=fcards,fcards$number==22 && fcards$type=="question")
subset(x=fcards,fcards$number==2)
subset(x=fcards,fcards$number==22)
subset(x=fcards,fcards$number==22 && fcards$type=="question")
subset(x=fcards,number==22 && type=="question")
class(fcards)
class(fcards$type)
class(fcards$number)
fcards$number <- as.numeric(as.character(fcards$number))
subset(x=fcards,number==22 && type=="question")
class(fcards$number)
fcards$number
subset(x=fcards,number==22 & type=="question")
subset(x=fcards,number==22 & type=="question")$content
fcards$content <- as.character(fcards$content)
subset(x=fcards,number==22 & type=="question")$content
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
f_current_question <- subset(x=fcards,number==f_current & type=="answer")$content
f_current_question
subset(x=fcards,number==22 & type=="answer")$content
subset(x=fcards,number==1 & type=="answer")$content
cat(subset(x=fcards,number==1 & type=="answer")$content)
cat(subset(x=fcards,number==1 & type=="answer")$content)[2]
cat(subset(x=fcards,number==1 & type=="answer")$content)[3]
cat(subset(x=fcards,number==1 & type=="answer")$content[3])
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
f_order
paste(f_order,99)
cbind(f_order,99)
c(f_order,99)
##############################################################################
###
###
### README : This is a small script to view RDA files, converted from CSV files exported by Studyblue
###
### REQUIREMENTS : This script installs and uses the stringr package
###
### LEGAL : For the legal people out there, this script is not linked in any way to Studyblue. It just happens that I wrote it to handle files exported from this platform.
# Install stringr package if necessary, then load it
list.of.packages <- c("stringr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])] # check which packages are installed
if(length(new.packages)) install.packages(new.packages) # if not install, install
for (i in 1:length(list.of.packages)) library(list.of.packages[i],character.only = TRUE) # load them
# Send working directory to the one in which flashcardreader is located
setwd(dirname(sys.frame(1)$ofile))
cat("\n Working directory set to the one in which this script is located \n")
# Set error messages for further use
errmsg1 <- "ERROR 1 - This is not a correct choice - choose a number corresponding to a file"
errmsg2 <- "ERROR 2 - Something went wrong with the identification of the starting and ending elements. Their number is not equal. Sorry, I failed you... :("
errmsg3 <- "ERROR 3"
errmsg4 <- "ERROR 4"
# File choice
cat("\n *** \n \n Available RDA files in your working directory : \n")
print(dir(pattern=".Rda")) # Show csv files in working directory
cat("\n Which file do you want to view? \n")
x <- (readline()) # Ask for input
# Check user input
if(is.na(as.numeric(x))) stop(errmsg1)
x<-as.numeric(x)
if(x>length(dir(pattern=".Rda")) || x<1) stop(errmsg1)
# If input correct (=corresponding to an actual file), load file
fnumber <- x
fcname <- dir(pattern=".Rda")[fnumber]
load(fcname)
fcards$type <- as.character(fcards$type)
fcards$content <- as.character(fcards$content)
fcards$number <- as.numeric(as.character(fcards$number))
# Identify parameters
fcards_nb <- length(unique(fcards$number))
temp_msg <- paste(c("\n Flashcard file correctly loaded. \n It contains ",fcards_nb," questions. \n"),collapse="")
cat(temp_msg)
# Ask user if (s)he still wants to review the flashcards
cat('\n Type "y" if you want to review the flashcards in random order or anything else to quit \n')
x <- (readline()) # Ask for input
# check answer
if (str_to_lower(x)!="y") stop("Okay, by then.")
# Reorder questions
f_order <- seq(from=1, to=fcards_nb, by=1)
set.seed(001)
f_order <- sample(f_order)
# Set repetitive messages
repmsg1 <- '\n \n \n Type any button to reveal the answer (except for "q/Q" or "exit" to leave)'
repmsg2 <- '\n \n \n Type: \n --> "c" if you had the right answer \n --> "s" if you want to take the question out of the deck \n --> "f" if you did not have the right answer \n --> "q" to quit'
# Reset stats
f_successes <- 0
f_attempts <- 0
# Define byebye function
byebye <- function() {
tmpmsg <- paste("\n Leaving flashcard reviewer. Just a few stats: \n Number of successes : ",f_successes,collapse = "")
}
while (length(f_order)>0) {
f_current <- f_order[1] # define current flashcard
f_order <- subset(f_order,f_order!=f_current) # take it out of the deck
f_current_question <- subset(x=fcards,number==f_current & type=="question")$content
tmpmsg <- paste(c('\n *** \n \n Question #',f_current," : \n",f_current_question,"\n \n",repmsg1),collapse="")
cat(tmpmsg)
x <- (readline()) # Ask for input
# Check if exit
x <- str_to_lower(x)
if(x=="q"||x=="exit") stop("Bye then")
# Show answer
f_current_answer_temp <- subset(x=fcards,number==f_current & type=="answer")$content
f_current_answer <- "\n Answer: \n"
for (i in 1:length(f_current_answer_temp)) f_current_answer <- paste(f_current_answer," \n ",f_current_answer_temp[i])
cat(f_current_answer)
# Ask for evaluation
cat(repmsg2)
x <- (readline()) # Ask for input
x <- str_to_lower(x)
f_attempts <- f_attempts +1 #increase attempt count
# If input = y
if(x=="y") f_successes <- f_successes +1 # increase success count
# If input = n
if(x=="n") f_order <- c(f_order,f_current) # put the question back in the deck
# If input = s
if(x=="n") f_order <- c(f_order,f_current) # increase skip count
}
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
date()
as.numeric(date)
as.numeric(date())
as.numeric(day())
date()
?date
hour()
sys.time()
Sys.time()
as.numeric(Sys.time())
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_study.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
fnumber
fcname
fcname <- dir()[fnumber]
fcname
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
dir()
dir(pattern="$[.csv]")
dir(pattern="$[.csv")
dir(pattern="csv")
dir(pattern="*csv")
dir(pattern="*csv.")
dir(pattern="csv^")
dir(pattern="csv^a")
dir(pattern="csva")
dir(pattern="csv*a")
dir(pattern="csv*")
dir(pattern=".csv")
dir(pattern="\.csv")
dir(pattern="//.csv")
dir(pattern="/.csv")
dir(pattern="*.csv")
dir(pattern="\*.csv")
dir(pattern="\*csv")
dir(pattern="\*csv")
dir(pattern="\\.csv$")
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
filepattern
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
dir
dir()
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_csv_to_rda.R')
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/Flashcards/studyblue_rda_viewer.R')
